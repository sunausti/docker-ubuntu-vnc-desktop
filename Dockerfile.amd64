ARG BASE_IMAGE=dorowu/ubuntu-desktop-lxde-vnc:latest
#################################
#   Librealsense Builder Stage  #
#################################
FROM $BASE_IMAGE AS librealsense-builder

ARG LIBRS_VERSION
# Make sure that we have a version number of librealsense as argument
RUN test -n "$LIBRS_VERSION"

# To avoid waiting for input during package installation
ENV DEBIAN_FRONTEND=noninteractive
RUN  curl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add
# Builder dependencies installation
RUN apt-get update \
    && apt-get install -qq -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    libssl-dev \
    libusb-1.0-0 \
    udev \
    libusb-1.0-0-dev \
    pkg-config \
    libgtk-3-dev \
    software-properties-common \
    libglfw3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    curl \
    python3 \
    python3-dev \
    ca-certificates \
    libopencv-dev python3-opencv \
    zlib1g-dev \
    locales \
     unzip \
     zip \
    wget libgtk2.0-dev \
    pkg-config libavcodec-dev libavformat-dev libswscale-dev \
    libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev \
    libboost-dev libboost-all-dev \
    && locale-gen en_US.UTF-8 \
    && LC_ALL=en_US.UTF-8 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean
#opencv

WORKDIR /
RUN wget --no-check-certificate https://github.com/opencv/opencv/archive/3.4.0.zip -O opencv-3.4.0.zip && \
    unzip -q opencv-3.4.0.zip && mv /opencv-3.4.0 /opencv

RUN wget --no-check-certificate https://github.com/opencv/opencv_contrib/archive/3.4.0.zip -O opencv_contrib-3.4.0.zip && \
    unzip -q opencv_contrib-3.4.0.zip && mv /opencv_contrib-3.4.0 /opencv_contrib

RUN mkdir -p /opencv/build
WORKDIR /opencv/build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D INSTALL_PYTHON_EXAMPLES=OFF \
	-D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules \
	-D BUILD_TESTS=OFF \
    -D WITH_QT=OFF \
    -D BUILD_PERF_TESTS=OFF \
	-D BUILD_PYTHON_SUPPORT=OFF \
	-D BUILD_EXAMPLES=OFF \
	-D BUILD_NEW_PYTHON_SUPPORT=OFF \
	-D BUILD_DOCS=OFF \
    -D BUILD_opencv_python2=OFF \
    -D BUILD_opencv_python3=OFF \
    -D BUILD_JAVA=OFF \
    -D BUILD_opencv_java=OFF \
	-D WITH_IPP=OFF \
	-D WITH_V4L=ON ..

RUN make -j$NUM_CORES
RUN make install
RUN ldconfig

ENV OpenCV_DIR=/opencv/build
# Download sources
WORKDIR /usr/src
RUN curl https://codeload.github.com/IntelRealSense/librealsense/tar.gz/refs/tags/v$LIBRS_VERSION -o librealsense.tar.gz
RUN tar -zxf librealsense.tar.gz \
    && rm librealsense.tar.gz
RUN ln -s /usr/src/librealsense-$LIBRS_VERSION /usr/src/librealsense

# Build and install
RUN cd /usr/src/librealsense \
    && mkdir build && cd build \
    && cmake \
    -DCMAKE_C_FLAGS_RELEASE="${CMAKE_C_FLAGS_RELEASE} -s" \
    -DCMAKE_CXX_FLAGS_RELEASE="${CMAKE_CXX_FLAGS_RELEASE} -s" \
    -DCMAKE_INSTALL_PREFIX=/opt/librealsense \
    -DBUILD_GRAPHICAL_EXAMPLES=OFF \
    -DPYTHON_EXECUTABLE="/usr/bin/python3" \
    -DBUILD_CV_EXAMPLES=true \
    -DBUILD_PYTHON_BINDINGS:bool=true \
    -DCMAKE_BUILD_TYPE=Release ../ \
    && make -j$(($(nproc)-1)) all \
    && make install
RUN cp -r /opt/librealsense/* /usr/local/
#RUN cp -r /usr/lib/python3/dist-packages/pyrealsense2 /usr/lib/python3/dist-packages/pyrealsense2
RUN cp -r /usr/src/librealsense/config/99-realsense-libusb.rules /etc/udev/rules.d/
RUN cp -r /usr/src/librealsense/config/99-realsense-d4xx-mipi-dfu.rules /etc/udev/rules.d/
RUN ldconfig
